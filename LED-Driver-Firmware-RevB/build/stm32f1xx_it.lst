ARM GAS  /var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f1xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/stm32f1xx_it.c"
  18              		.section	.text.NMI_Handler,"ax",%progbits
  19              		.align	1
  20              		.global	NMI_Handler
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	NMI_Handler:
  26              	.LFB72:
   1:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f1xx_it.c **** /**
   3:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f1xx_it.c ****   * @file    stm32f1xx_it.c
   5:Core/Src/stm32f1xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f1xx_it.c ****   * @attention
   8:Core/Src/stm32f1xx_it.c ****   *
   9:Core/Src/stm32f1xx_it.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/stm32f1xx_it.c ****   * All rights reserved.
  11:Core/Src/stm32f1xx_it.c ****   *
  12:Core/Src/stm32f1xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32f1xx_it.c ****   * in the root directory of this software component.
  14:Core/Src/stm32f1xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32f1xx_it.c ****   *
  16:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
  17:Core/Src/stm32f1xx_it.c ****   */
  18:Core/Src/stm32f1xx_it.c **** /* USER CODE END Header */
  19:Core/Src/stm32f1xx_it.c **** 
  20:Core/Src/stm32f1xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32f1xx_it.c **** #include "main.h"
  22:Core/Src/stm32f1xx_it.c **** #include "stm32f1xx_it.h"
  23:Core/Src/stm32f1xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/stm32f1xx_it.c **** /* USER CODE END Includes */
  26:Core/Src/stm32f1xx_it.c **** 
  27:Core/Src/stm32f1xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN TD */
  29:Core/Src/stm32f1xx_it.c **** 
  30:Core/Src/stm32f1xx_it.c **** /* USER CODE END TD */
  31:Core/Src/stm32f1xx_it.c **** 
  32:Core/Src/stm32f1xx_it.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  /var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s 			page 2


  33:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PD */
  34:Core/Src/stm32f1xx_it.c **** 
  35:Core/Src/stm32f1xx_it.c **** /* USER CODE END PD */
  36:Core/Src/stm32f1xx_it.c **** 
  37:Core/Src/stm32f1xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PM */
  39:Core/Src/stm32f1xx_it.c **** 
  40:Core/Src/stm32f1xx_it.c **** /* USER CODE END PM */
  41:Core/Src/stm32f1xx_it.c **** 
  42:Core/Src/stm32f1xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PV */
  44:Core/Src/stm32f1xx_it.c **** 
  45:Core/Src/stm32f1xx_it.c **** /* USER CODE END PV */
  46:Core/Src/stm32f1xx_it.c **** 
  47:Core/Src/stm32f1xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PFP */
  49:Core/Src/stm32f1xx_it.c **** 
  50:Core/Src/stm32f1xx_it.c **** /* USER CODE END PFP */
  51:Core/Src/stm32f1xx_it.c **** 
  52:Core/Src/stm32f1xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN 0 */
  54:Core/Src/stm32f1xx_it.c **** 
  55:Core/Src/stm32f1xx_it.c **** /* USER CODE END 0 */
  56:Core/Src/stm32f1xx_it.c **** 
  57:Core/Src/stm32f1xx_it.c **** /* External variables --------------------------------------------------------*/
  58:Core/Src/stm32f1xx_it.c **** extern DMA_HandleTypeDef hdma_tim3_ch1_trig;
  59:Core/Src/stm32f1xx_it.c **** extern DMA_HandleTypeDef hdma_tim3_ch3;
  60:Core/Src/stm32f1xx_it.c **** extern DMA_HandleTypeDef hdma_tim3_ch4_up;
  61:Core/Src/stm32f1xx_it.c **** extern DMA_HandleTypeDef hdma_tim5_ch1;
  62:Core/Src/stm32f1xx_it.c **** extern DMA_HandleTypeDef hdma_tim5_ch2;
  63:Core/Src/stm32f1xx_it.c **** extern DMA_HandleTypeDef hdma_tim5_ch3_up;
  64:Core/Src/stm32f1xx_it.c **** extern DMA_HandleTypeDef hdma_tim5_ch4_trig;
  65:Core/Src/stm32f1xx_it.c **** extern DMA_HandleTypeDef hdma_tim8_ch1;
  66:Core/Src/stm32f1xx_it.c **** extern TIM_HandleTypeDef htim3;
  67:Core/Src/stm32f1xx_it.c **** extern TIM_HandleTypeDef htim5;
  68:Core/Src/stm32f1xx_it.c **** extern TIM_HandleTypeDef htim8;
  69:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN EV */
  70:Core/Src/stm32f1xx_it.c **** 
  71:Core/Src/stm32f1xx_it.c **** /* USER CODE END EV */
  72:Core/Src/stm32f1xx_it.c **** 
  73:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
  74:Core/Src/stm32f1xx_it.c **** /*           Cortex-M3 Processor Interruption and Exception Handlers          */
  75:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
  76:Core/Src/stm32f1xx_it.c **** /**
  77:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Non maskable interrupt.
  78:Core/Src/stm32f1xx_it.c ****   */
  79:Core/Src/stm32f1xx_it.c **** void NMI_Handler(void)
  80:Core/Src/stm32f1xx_it.c **** {
  27              		.loc 1 80 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.L2:
  81:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  82:Core/Src/stm32f1xx_it.c **** 
ARM GAS  /var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s 			page 3


  83:Core/Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  84:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  85:Core/Src/stm32f1xx_it.c ****    while (1)
  34              		.loc 1 85 4 view .LVU1
  86:Core/Src/stm32f1xx_it.c ****   {
  87:Core/Src/stm32f1xx_it.c ****   }
  35              		.loc 1 87 3 view .LVU2
  85:Core/Src/stm32f1xx_it.c ****   {
  36              		.loc 1 85 10 view .LVU3
  37 0000 FEE7     		b	.L2
  38              		.cfi_endproc
  39              	.LFE72:
  41              		.section	.text.HardFault_Handler,"ax",%progbits
  42              		.align	1
  43              		.global	HardFault_Handler
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  48              	HardFault_Handler:
  49              	.LFB73:
  88:Core/Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  89:Core/Src/stm32f1xx_it.c **** }
  90:Core/Src/stm32f1xx_it.c **** 
  91:Core/Src/stm32f1xx_it.c **** /**
  92:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Hard fault interrupt.
  93:Core/Src/stm32f1xx_it.c ****   */
  94:Core/Src/stm32f1xx_it.c **** void HardFault_Handler(void)
  95:Core/Src/stm32f1xx_it.c **** {
  50              		.loc 1 95 1 view -0
  51              		.cfi_startproc
  52              		@ Volatile: function does not return.
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              		@ link register save eliminated.
  56              	.L4:
  96:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  97:Core/Src/stm32f1xx_it.c **** 
  98:Core/Src/stm32f1xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  99:Core/Src/stm32f1xx_it.c ****   while (1)
  57              		.loc 1 99 3 view .LVU5
 100:Core/Src/stm32f1xx_it.c ****   {
 101:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
 102:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
 103:Core/Src/stm32f1xx_it.c ****   }
  58              		.loc 1 103 3 view .LVU6
  99:Core/Src/stm32f1xx_it.c ****   {
  59              		.loc 1 99 9 view .LVU7
  60 0000 FEE7     		b	.L4
  61              		.cfi_endproc
  62              	.LFE73:
  64              		.section	.text.MemManage_Handler,"ax",%progbits
  65              		.align	1
  66              		.global	MemManage_Handler
  67              		.syntax unified
  68              		.thumb
  69              		.thumb_func
  71              	MemManage_Handler:
ARM GAS  /var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s 			page 4


  72              	.LFB74:
 104:Core/Src/stm32f1xx_it.c **** }
 105:Core/Src/stm32f1xx_it.c **** 
 106:Core/Src/stm32f1xx_it.c **** /**
 107:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Memory management fault.
 108:Core/Src/stm32f1xx_it.c ****   */
 109:Core/Src/stm32f1xx_it.c **** void MemManage_Handler(void)
 110:Core/Src/stm32f1xx_it.c **** {
  73              		.loc 1 110 1 view -0
  74              		.cfi_startproc
  75              		@ Volatile: function does not return.
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  79              	.L6:
 111:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 112:Core/Src/stm32f1xx_it.c **** 
 113:Core/Src/stm32f1xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 114:Core/Src/stm32f1xx_it.c ****   while (1)
  80              		.loc 1 114 3 view .LVU9
 115:Core/Src/stm32f1xx_it.c ****   {
 116:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 117:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 118:Core/Src/stm32f1xx_it.c ****   }
  81              		.loc 1 118 3 view .LVU10
 114:Core/Src/stm32f1xx_it.c ****   {
  82              		.loc 1 114 9 view .LVU11
  83 0000 FEE7     		b	.L6
  84              		.cfi_endproc
  85              	.LFE74:
  87              		.section	.text.BusFault_Handler,"ax",%progbits
  88              		.align	1
  89              		.global	BusFault_Handler
  90              		.syntax unified
  91              		.thumb
  92              		.thumb_func
  94              	BusFault_Handler:
  95              	.LFB75:
 119:Core/Src/stm32f1xx_it.c **** }
 120:Core/Src/stm32f1xx_it.c **** 
 121:Core/Src/stm32f1xx_it.c **** /**
 122:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
 123:Core/Src/stm32f1xx_it.c ****   */
 124:Core/Src/stm32f1xx_it.c **** void BusFault_Handler(void)
 125:Core/Src/stm32f1xx_it.c **** {
  96              		.loc 1 125 1 view -0
  97              		.cfi_startproc
  98              		@ Volatile: function does not return.
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 0, uses_anonymous_args = 0
 101              		@ link register save eliminated.
 102              	.L8:
 126:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 127:Core/Src/stm32f1xx_it.c **** 
 128:Core/Src/stm32f1xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 129:Core/Src/stm32f1xx_it.c ****   while (1)
 103              		.loc 1 129 3 view .LVU13
ARM GAS  /var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s 			page 5


 130:Core/Src/stm32f1xx_it.c ****   {
 131:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 132:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 133:Core/Src/stm32f1xx_it.c ****   }
 104              		.loc 1 133 3 view .LVU14
 129:Core/Src/stm32f1xx_it.c ****   {
 105              		.loc 1 129 9 view .LVU15
 106 0000 FEE7     		b	.L8
 107              		.cfi_endproc
 108              	.LFE75:
 110              		.section	.text.UsageFault_Handler,"ax",%progbits
 111              		.align	1
 112              		.global	UsageFault_Handler
 113              		.syntax unified
 114              		.thumb
 115              		.thumb_func
 117              	UsageFault_Handler:
 118              	.LFB76:
 134:Core/Src/stm32f1xx_it.c **** }
 135:Core/Src/stm32f1xx_it.c **** 
 136:Core/Src/stm32f1xx_it.c **** /**
 137:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 138:Core/Src/stm32f1xx_it.c ****   */
 139:Core/Src/stm32f1xx_it.c **** void UsageFault_Handler(void)
 140:Core/Src/stm32f1xx_it.c **** {
 119              		.loc 1 140 1 view -0
 120              		.cfi_startproc
 121              		@ Volatile: function does not return.
 122              		@ args = 0, pretend = 0, frame = 0
 123              		@ frame_needed = 0, uses_anonymous_args = 0
 124              		@ link register save eliminated.
 125              	.L10:
 141:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 142:Core/Src/stm32f1xx_it.c **** 
 143:Core/Src/stm32f1xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 144:Core/Src/stm32f1xx_it.c ****   while (1)
 126              		.loc 1 144 3 view .LVU17
 145:Core/Src/stm32f1xx_it.c ****   {
 146:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 147:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 148:Core/Src/stm32f1xx_it.c ****   }
 127              		.loc 1 148 3 view .LVU18
 144:Core/Src/stm32f1xx_it.c ****   {
 128              		.loc 1 144 9 view .LVU19
 129 0000 FEE7     		b	.L10
 130              		.cfi_endproc
 131              	.LFE76:
 133              		.section	.text.SVC_Handler,"ax",%progbits
 134              		.align	1
 135              		.global	SVC_Handler
 136              		.syntax unified
 137              		.thumb
 138              		.thumb_func
 140              	SVC_Handler:
 141              	.LFB77:
 149:Core/Src/stm32f1xx_it.c **** }
 150:Core/Src/stm32f1xx_it.c **** 
ARM GAS  /var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s 			page 6


 151:Core/Src/stm32f1xx_it.c **** /**
 152:Core/Src/stm32f1xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 153:Core/Src/stm32f1xx_it.c ****   */
 154:Core/Src/stm32f1xx_it.c **** void SVC_Handler(void)
 155:Core/Src/stm32f1xx_it.c **** {
 142              		.loc 1 155 1 view -0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 0
 145              		@ frame_needed = 0, uses_anonymous_args = 0
 146              		@ link register save eliminated.
 156:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 157:Core/Src/stm32f1xx_it.c **** 
 158:Core/Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 159:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 160:Core/Src/stm32f1xx_it.c **** 
 161:Core/Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 162:Core/Src/stm32f1xx_it.c **** }
 147              		.loc 1 162 1 view .LVU21
 148 0000 7047     		bx	lr
 149              		.cfi_endproc
 150              	.LFE77:
 152              		.section	.text.DebugMon_Handler,"ax",%progbits
 153              		.align	1
 154              		.global	DebugMon_Handler
 155              		.syntax unified
 156              		.thumb
 157              		.thumb_func
 159              	DebugMon_Handler:
 160              	.LFB78:
 163:Core/Src/stm32f1xx_it.c **** 
 164:Core/Src/stm32f1xx_it.c **** /**
 165:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Debug monitor.
 166:Core/Src/stm32f1xx_it.c ****   */
 167:Core/Src/stm32f1xx_it.c **** void DebugMon_Handler(void)
 168:Core/Src/stm32f1xx_it.c **** {
 161              		.loc 1 168 1 view -0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165              		@ link register save eliminated.
 169:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 170:Core/Src/stm32f1xx_it.c **** 
 171:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 172:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 173:Core/Src/stm32f1xx_it.c **** 
 174:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 175:Core/Src/stm32f1xx_it.c **** }
 166              		.loc 1 175 1 view .LVU23
 167 0000 7047     		bx	lr
 168              		.cfi_endproc
 169              	.LFE78:
 171              		.section	.text.PendSV_Handler,"ax",%progbits
 172              		.align	1
 173              		.global	PendSV_Handler
 174              		.syntax unified
 175              		.thumb
 176              		.thumb_func
ARM GAS  /var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s 			page 7


 178              	PendSV_Handler:
 179              	.LFB79:
 176:Core/Src/stm32f1xx_it.c **** 
 177:Core/Src/stm32f1xx_it.c **** /**
 178:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Pendable request for system service.
 179:Core/Src/stm32f1xx_it.c ****   */
 180:Core/Src/stm32f1xx_it.c **** void PendSV_Handler(void)
 181:Core/Src/stm32f1xx_it.c **** {
 180              		.loc 1 181 1 view -0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184              		@ link register save eliminated.
 182:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 183:Core/Src/stm32f1xx_it.c **** 
 184:Core/Src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 185:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 186:Core/Src/stm32f1xx_it.c **** 
 187:Core/Src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 188:Core/Src/stm32f1xx_it.c **** }
 185              		.loc 1 188 1 view .LVU25
 186 0000 7047     		bx	lr
 187              		.cfi_endproc
 188              	.LFE79:
 190              		.section	.text.SysTick_Handler,"ax",%progbits
 191              		.align	1
 192              		.global	SysTick_Handler
 193              		.syntax unified
 194              		.thumb
 195              		.thumb_func
 197              	SysTick_Handler:
 198              	.LFB80:
 189:Core/Src/stm32f1xx_it.c **** 
 190:Core/Src/stm32f1xx_it.c **** /**
 191:Core/Src/stm32f1xx_it.c ****   * @brief This function handles System tick timer.
 192:Core/Src/stm32f1xx_it.c ****   */
 193:Core/Src/stm32f1xx_it.c **** void SysTick_Handler(void)
 194:Core/Src/stm32f1xx_it.c **** {
 199              		.loc 1 194 1 view -0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 0, uses_anonymous_args = 0
 203 0000 08B5     		push	{r3, lr}
 204              	.LCFI0:
 205              		.cfi_def_cfa_offset 8
 206              		.cfi_offset 3, -8
 207              		.cfi_offset 14, -4
 195:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 196:Core/Src/stm32f1xx_it.c **** 
 197:Core/Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 198:Core/Src/stm32f1xx_it.c ****   HAL_IncTick();
 208              		.loc 1 198 3 view .LVU27
 209 0002 FFF7FEFF 		bl	HAL_IncTick
 210              	.LVL0:
 199:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 200:Core/Src/stm32f1xx_it.c **** 
 201:Core/Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
ARM GAS  /var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s 			page 8


 202:Core/Src/stm32f1xx_it.c **** }
 211              		.loc 1 202 1 is_stmt 0 view .LVU28
 212 0006 08BD     		pop	{r3, pc}
 213              		.cfi_endproc
 214              	.LFE80:
 216              		.section	.text.DMA1_Channel2_IRQHandler,"ax",%progbits
 217              		.align	1
 218              		.global	DMA1_Channel2_IRQHandler
 219              		.syntax unified
 220              		.thumb
 221              		.thumb_func
 223              	DMA1_Channel2_IRQHandler:
 224              	.LFB81:
 203:Core/Src/stm32f1xx_it.c **** 
 204:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
 205:Core/Src/stm32f1xx_it.c **** /* STM32F1xx Peripheral Interrupt Handlers                                    */
 206:Core/Src/stm32f1xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 207:Core/Src/stm32f1xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 208:Core/Src/stm32f1xx_it.c **** /* please refer to the startup file (startup_stm32f1xx.s).                    */
 209:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
 210:Core/Src/stm32f1xx_it.c **** 
 211:Core/Src/stm32f1xx_it.c **** /**
 212:Core/Src/stm32f1xx_it.c ****   * @brief This function handles DMA1 channel2 global interrupt.
 213:Core/Src/stm32f1xx_it.c ****   */
 214:Core/Src/stm32f1xx_it.c **** void DMA1_Channel2_IRQHandler(void)
 215:Core/Src/stm32f1xx_it.c **** {
 225              		.loc 1 215 1 is_stmt 1 view -0
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 0
 228              		@ frame_needed = 0, uses_anonymous_args = 0
 229 0000 08B5     		push	{r3, lr}
 230              	.LCFI1:
 231              		.cfi_def_cfa_offset 8
 232              		.cfi_offset 3, -8
 233              		.cfi_offset 14, -4
 216:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel2_IRQn 0 */
 217:Core/Src/stm32f1xx_it.c **** 
 218:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel2_IRQn 0 */
 219:Core/Src/stm32f1xx_it.c ****   HAL_DMA_IRQHandler(&hdma_tim3_ch3);
 234              		.loc 1 219 3 view .LVU30
 235 0002 0248     		ldr	r0, .L18
 236 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 237              	.LVL1:
 220:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel2_IRQn 1 */
 221:Core/Src/stm32f1xx_it.c **** 
 222:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel2_IRQn 1 */
 223:Core/Src/stm32f1xx_it.c **** }
 238              		.loc 1 223 1 is_stmt 0 view .LVU31
 239 0008 08BD     		pop	{r3, pc}
 240              	.L19:
 241 000a 00BF     		.align	2
 242              	.L18:
 243 000c 00000000 		.word	hdma_tim3_ch3
 244              		.cfi_endproc
 245              	.LFE81:
 247              		.section	.text.DMA1_Channel3_IRQHandler,"ax",%progbits
 248              		.align	1
ARM GAS  /var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s 			page 9


 249              		.global	DMA1_Channel3_IRQHandler
 250              		.syntax unified
 251              		.thumb
 252              		.thumb_func
 254              	DMA1_Channel3_IRQHandler:
 255              	.LFB82:
 224:Core/Src/stm32f1xx_it.c **** 
 225:Core/Src/stm32f1xx_it.c **** /**
 226:Core/Src/stm32f1xx_it.c ****   * @brief This function handles DMA1 channel3 global interrupt.
 227:Core/Src/stm32f1xx_it.c ****   */
 228:Core/Src/stm32f1xx_it.c **** void DMA1_Channel3_IRQHandler(void)
 229:Core/Src/stm32f1xx_it.c **** {
 256              		.loc 1 229 1 is_stmt 1 view -0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 0
 259              		@ frame_needed = 0, uses_anonymous_args = 0
 260 0000 08B5     		push	{r3, lr}
 261              	.LCFI2:
 262              		.cfi_def_cfa_offset 8
 263              		.cfi_offset 3, -8
 264              		.cfi_offset 14, -4
 230:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel3_IRQn 0 */
 231:Core/Src/stm32f1xx_it.c **** 
 232:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel3_IRQn 0 */
 233:Core/Src/stm32f1xx_it.c ****   HAL_DMA_IRQHandler(&hdma_tim3_ch4_up);
 265              		.loc 1 233 3 view .LVU33
 266 0002 0248     		ldr	r0, .L22
 267 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 268              	.LVL2:
 234:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel3_IRQn 1 */
 235:Core/Src/stm32f1xx_it.c **** 
 236:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel3_IRQn 1 */
 237:Core/Src/stm32f1xx_it.c **** }
 269              		.loc 1 237 1 is_stmt 0 view .LVU34
 270 0008 08BD     		pop	{r3, pc}
 271              	.L23:
 272 000a 00BF     		.align	2
 273              	.L22:
 274 000c 00000000 		.word	hdma_tim3_ch4_up
 275              		.cfi_endproc
 276              	.LFE82:
 278              		.section	.text.DMA1_Channel6_IRQHandler,"ax",%progbits
 279              		.align	1
 280              		.global	DMA1_Channel6_IRQHandler
 281              		.syntax unified
 282              		.thumb
 283              		.thumb_func
 285              	DMA1_Channel6_IRQHandler:
 286              	.LFB83:
 238:Core/Src/stm32f1xx_it.c **** 
 239:Core/Src/stm32f1xx_it.c **** /**
 240:Core/Src/stm32f1xx_it.c ****   * @brief This function handles DMA1 channel6 global interrupt.
 241:Core/Src/stm32f1xx_it.c ****   */
 242:Core/Src/stm32f1xx_it.c **** void DMA1_Channel6_IRQHandler(void)
 243:Core/Src/stm32f1xx_it.c **** {
 287              		.loc 1 243 1 is_stmt 1 view -0
 288              		.cfi_startproc
ARM GAS  /var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s 			page 10


 289              		@ args = 0, pretend = 0, frame = 0
 290              		@ frame_needed = 0, uses_anonymous_args = 0
 291 0000 08B5     		push	{r3, lr}
 292              	.LCFI3:
 293              		.cfi_def_cfa_offset 8
 294              		.cfi_offset 3, -8
 295              		.cfi_offset 14, -4
 244:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel6_IRQn 0 */
 245:Core/Src/stm32f1xx_it.c **** 
 246:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel6_IRQn 0 */
 247:Core/Src/stm32f1xx_it.c ****   HAL_DMA_IRQHandler(&hdma_tim3_ch1_trig);
 296              		.loc 1 247 3 view .LVU36
 297 0002 0248     		ldr	r0, .L26
 298 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 299              	.LVL3:
 248:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel6_IRQn 1 */
 249:Core/Src/stm32f1xx_it.c **** 
 250:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel6_IRQn 1 */
 251:Core/Src/stm32f1xx_it.c **** }
 300              		.loc 1 251 1 is_stmt 0 view .LVU37
 301 0008 08BD     		pop	{r3, pc}
 302              	.L27:
 303 000a 00BF     		.align	2
 304              	.L26:
 305 000c 00000000 		.word	hdma_tim3_ch1_trig
 306              		.cfi_endproc
 307              	.LFE83:
 309              		.section	.text.TIM3_IRQHandler,"ax",%progbits
 310              		.align	1
 311              		.global	TIM3_IRQHandler
 312              		.syntax unified
 313              		.thumb
 314              		.thumb_func
 316              	TIM3_IRQHandler:
 317              	.LFB84:
 252:Core/Src/stm32f1xx_it.c **** 
 253:Core/Src/stm32f1xx_it.c **** /**
 254:Core/Src/stm32f1xx_it.c ****   * @brief This function handles TIM3 global interrupt.
 255:Core/Src/stm32f1xx_it.c ****   */
 256:Core/Src/stm32f1xx_it.c **** void TIM3_IRQHandler(void)
 257:Core/Src/stm32f1xx_it.c **** {
 318              		.loc 1 257 1 is_stmt 1 view -0
 319              		.cfi_startproc
 320              		@ args = 0, pretend = 0, frame = 0
 321              		@ frame_needed = 0, uses_anonymous_args = 0
 322 0000 08B5     		push	{r3, lr}
 323              	.LCFI4:
 324              		.cfi_def_cfa_offset 8
 325              		.cfi_offset 3, -8
 326              		.cfi_offset 14, -4
 258:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM3_IRQn 0 */
 259:Core/Src/stm32f1xx_it.c **** 
 260:Core/Src/stm32f1xx_it.c ****   /* USER CODE END TIM3_IRQn 0 */
 261:Core/Src/stm32f1xx_it.c ****   HAL_TIM_IRQHandler(&htim3);
 327              		.loc 1 261 3 view .LVU39
 328 0002 0248     		ldr	r0, .L30
 329 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
ARM GAS  /var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s 			page 11


 330              	.LVL4:
 262:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM3_IRQn 1 */
 263:Core/Src/stm32f1xx_it.c **** 
 264:Core/Src/stm32f1xx_it.c ****   /* USER CODE END TIM3_IRQn 1 */
 265:Core/Src/stm32f1xx_it.c **** }
 331              		.loc 1 265 1 is_stmt 0 view .LVU40
 332 0008 08BD     		pop	{r3, pc}
 333              	.L31:
 334 000a 00BF     		.align	2
 335              	.L30:
 336 000c 00000000 		.word	htim3
 337              		.cfi_endproc
 338              	.LFE84:
 340              		.section	.text.TIM8_BRK_TIM12_IRQHandler,"ax",%progbits
 341              		.align	1
 342              		.global	TIM8_BRK_TIM12_IRQHandler
 343              		.syntax unified
 344              		.thumb
 345              		.thumb_func
 347              	TIM8_BRK_TIM12_IRQHandler:
 348              	.LFB85:
 266:Core/Src/stm32f1xx_it.c **** 
 267:Core/Src/stm32f1xx_it.c **** /**
 268:Core/Src/stm32f1xx_it.c ****   * @brief This function handles TIM8 break interrupt and TIM12 global interrupt.
 269:Core/Src/stm32f1xx_it.c ****   */
 270:Core/Src/stm32f1xx_it.c **** void TIM8_BRK_TIM12_IRQHandler(void)
 271:Core/Src/stm32f1xx_it.c **** {
 349              		.loc 1 271 1 is_stmt 1 view -0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 0
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 353 0000 08B5     		push	{r3, lr}
 354              	.LCFI5:
 355              		.cfi_def_cfa_offset 8
 356              		.cfi_offset 3, -8
 357              		.cfi_offset 14, -4
 272:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM8_BRK_TIM12_IRQn 0 */
 273:Core/Src/stm32f1xx_it.c **** 
 274:Core/Src/stm32f1xx_it.c ****   /* USER CODE END TIM8_BRK_TIM12_IRQn 0 */
 275:Core/Src/stm32f1xx_it.c ****   HAL_TIM_IRQHandler(&htim8);
 358              		.loc 1 275 3 view .LVU42
 359 0002 0248     		ldr	r0, .L34
 360 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 361              	.LVL5:
 276:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM8_BRK_TIM12_IRQn 1 */
 277:Core/Src/stm32f1xx_it.c **** 
 278:Core/Src/stm32f1xx_it.c ****   /* USER CODE END TIM8_BRK_TIM12_IRQn 1 */
 279:Core/Src/stm32f1xx_it.c **** }
 362              		.loc 1 279 1 is_stmt 0 view .LVU43
 363 0008 08BD     		pop	{r3, pc}
 364              	.L35:
 365 000a 00BF     		.align	2
 366              	.L34:
 367 000c 00000000 		.word	htim8
 368              		.cfi_endproc
 369              	.LFE85:
 371              		.section	.text.TIM8_UP_TIM13_IRQHandler,"ax",%progbits
ARM GAS  /var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s 			page 12


 372              		.align	1
 373              		.global	TIM8_UP_TIM13_IRQHandler
 374              		.syntax unified
 375              		.thumb
 376              		.thumb_func
 378              	TIM8_UP_TIM13_IRQHandler:
 379              	.LFB86:
 280:Core/Src/stm32f1xx_it.c **** 
 281:Core/Src/stm32f1xx_it.c **** /**
 282:Core/Src/stm32f1xx_it.c ****   * @brief This function handles TIM8 update interrupt and TIM13 global interrupt.
 283:Core/Src/stm32f1xx_it.c ****   */
 284:Core/Src/stm32f1xx_it.c **** void TIM8_UP_TIM13_IRQHandler(void)
 285:Core/Src/stm32f1xx_it.c **** {
 380              		.loc 1 285 1 is_stmt 1 view -0
 381              		.cfi_startproc
 382              		@ args = 0, pretend = 0, frame = 0
 383              		@ frame_needed = 0, uses_anonymous_args = 0
 384 0000 08B5     		push	{r3, lr}
 385              	.LCFI6:
 386              		.cfi_def_cfa_offset 8
 387              		.cfi_offset 3, -8
 388              		.cfi_offset 14, -4
 286:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM8_UP_TIM13_IRQn 0 */
 287:Core/Src/stm32f1xx_it.c **** 
 288:Core/Src/stm32f1xx_it.c ****   /* USER CODE END TIM8_UP_TIM13_IRQn 0 */
 289:Core/Src/stm32f1xx_it.c ****   HAL_TIM_IRQHandler(&htim8);
 389              		.loc 1 289 3 view .LVU45
 390 0002 0248     		ldr	r0, .L38
 391 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 392              	.LVL6:
 290:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM8_UP_TIM13_IRQn 1 */
 291:Core/Src/stm32f1xx_it.c **** 
 292:Core/Src/stm32f1xx_it.c ****   /* USER CODE END TIM8_UP_TIM13_IRQn 1 */
 293:Core/Src/stm32f1xx_it.c **** }
 393              		.loc 1 293 1 is_stmt 0 view .LVU46
 394 0008 08BD     		pop	{r3, pc}
 395              	.L39:
 396 000a 00BF     		.align	2
 397              	.L38:
 398 000c 00000000 		.word	htim8
 399              		.cfi_endproc
 400              	.LFE86:
 402              		.section	.text.TIM8_TRG_COM_TIM14_IRQHandler,"ax",%progbits
 403              		.align	1
 404              		.global	TIM8_TRG_COM_TIM14_IRQHandler
 405              		.syntax unified
 406              		.thumb
 407              		.thumb_func
 409              	TIM8_TRG_COM_TIM14_IRQHandler:
 410              	.LFB87:
 294:Core/Src/stm32f1xx_it.c **** 
 295:Core/Src/stm32f1xx_it.c **** /**
 296:Core/Src/stm32f1xx_it.c ****   * @brief This function handles TIM8 trigger and commutation interrupts and TIM14 global interrupt
 297:Core/Src/stm32f1xx_it.c ****   */
 298:Core/Src/stm32f1xx_it.c **** void TIM8_TRG_COM_TIM14_IRQHandler(void)
 299:Core/Src/stm32f1xx_it.c **** {
 411              		.loc 1 299 1 is_stmt 1 view -0
ARM GAS  /var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s 			page 13


 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 0
 414              		@ frame_needed = 0, uses_anonymous_args = 0
 415 0000 08B5     		push	{r3, lr}
 416              	.LCFI7:
 417              		.cfi_def_cfa_offset 8
 418              		.cfi_offset 3, -8
 419              		.cfi_offset 14, -4
 300:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM8_TRG_COM_TIM14_IRQn 0 */
 301:Core/Src/stm32f1xx_it.c **** 
 302:Core/Src/stm32f1xx_it.c ****   /* USER CODE END TIM8_TRG_COM_TIM14_IRQn 0 */
 303:Core/Src/stm32f1xx_it.c ****   HAL_TIM_IRQHandler(&htim8);
 420              		.loc 1 303 3 view .LVU48
 421 0002 0248     		ldr	r0, .L42
 422 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 423              	.LVL7:
 304:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM8_TRG_COM_TIM14_IRQn 1 */
 305:Core/Src/stm32f1xx_it.c **** 
 306:Core/Src/stm32f1xx_it.c ****   /* USER CODE END TIM8_TRG_COM_TIM14_IRQn 1 */
 307:Core/Src/stm32f1xx_it.c **** }
 424              		.loc 1 307 1 is_stmt 0 view .LVU49
 425 0008 08BD     		pop	{r3, pc}
 426              	.L43:
 427 000a 00BF     		.align	2
 428              	.L42:
 429 000c 00000000 		.word	htim8
 430              		.cfi_endproc
 431              	.LFE87:
 433              		.section	.text.TIM8_CC_IRQHandler,"ax",%progbits
 434              		.align	1
 435              		.global	TIM8_CC_IRQHandler
 436              		.syntax unified
 437              		.thumb
 438              		.thumb_func
 440              	TIM8_CC_IRQHandler:
 441              	.LFB88:
 308:Core/Src/stm32f1xx_it.c **** 
 309:Core/Src/stm32f1xx_it.c **** /**
 310:Core/Src/stm32f1xx_it.c ****   * @brief This function handles TIM8 capture compare interrupt.
 311:Core/Src/stm32f1xx_it.c ****   */
 312:Core/Src/stm32f1xx_it.c **** void TIM8_CC_IRQHandler(void)
 313:Core/Src/stm32f1xx_it.c **** {
 442              		.loc 1 313 1 is_stmt 1 view -0
 443              		.cfi_startproc
 444              		@ args = 0, pretend = 0, frame = 0
 445              		@ frame_needed = 0, uses_anonymous_args = 0
 446 0000 08B5     		push	{r3, lr}
 447              	.LCFI8:
 448              		.cfi_def_cfa_offset 8
 449              		.cfi_offset 3, -8
 450              		.cfi_offset 14, -4
 314:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM8_CC_IRQn 0 */
 315:Core/Src/stm32f1xx_it.c **** 
 316:Core/Src/stm32f1xx_it.c ****   /* USER CODE END TIM8_CC_IRQn 0 */
 317:Core/Src/stm32f1xx_it.c ****   HAL_TIM_IRQHandler(&htim8);
 451              		.loc 1 317 3 view .LVU51
 452 0002 0248     		ldr	r0, .L46
ARM GAS  /var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s 			page 14


 453 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 454              	.LVL8:
 318:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM8_CC_IRQn 1 */
 319:Core/Src/stm32f1xx_it.c **** 
 320:Core/Src/stm32f1xx_it.c ****   /* USER CODE END TIM8_CC_IRQn 1 */
 321:Core/Src/stm32f1xx_it.c **** }
 455              		.loc 1 321 1 is_stmt 0 view .LVU52
 456 0008 08BD     		pop	{r3, pc}
 457              	.L47:
 458 000a 00BF     		.align	2
 459              	.L46:
 460 000c 00000000 		.word	htim8
 461              		.cfi_endproc
 462              	.LFE88:
 464              		.section	.text.TIM5_IRQHandler,"ax",%progbits
 465              		.align	1
 466              		.global	TIM5_IRQHandler
 467              		.syntax unified
 468              		.thumb
 469              		.thumb_func
 471              	TIM5_IRQHandler:
 472              	.LFB89:
 322:Core/Src/stm32f1xx_it.c **** 
 323:Core/Src/stm32f1xx_it.c **** /**
 324:Core/Src/stm32f1xx_it.c ****   * @brief This function handles TIM5 global interrupt.
 325:Core/Src/stm32f1xx_it.c ****   */
 326:Core/Src/stm32f1xx_it.c **** void TIM5_IRQHandler(void)
 327:Core/Src/stm32f1xx_it.c **** {
 473              		.loc 1 327 1 is_stmt 1 view -0
 474              		.cfi_startproc
 475              		@ args = 0, pretend = 0, frame = 0
 476              		@ frame_needed = 0, uses_anonymous_args = 0
 477 0000 08B5     		push	{r3, lr}
 478              	.LCFI9:
 479              		.cfi_def_cfa_offset 8
 480              		.cfi_offset 3, -8
 481              		.cfi_offset 14, -4
 328:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM5_IRQn 0 */
 329:Core/Src/stm32f1xx_it.c **** 
 330:Core/Src/stm32f1xx_it.c ****   /* USER CODE END TIM5_IRQn 0 */
 331:Core/Src/stm32f1xx_it.c ****   HAL_TIM_IRQHandler(&htim5);
 482              		.loc 1 331 3 view .LVU54
 483 0002 0248     		ldr	r0, .L50
 484 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 485              	.LVL9:
 332:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM5_IRQn 1 */
 333:Core/Src/stm32f1xx_it.c **** 
 334:Core/Src/stm32f1xx_it.c ****   /* USER CODE END TIM5_IRQn 1 */
 335:Core/Src/stm32f1xx_it.c **** }
 486              		.loc 1 335 1 is_stmt 0 view .LVU55
 487 0008 08BD     		pop	{r3, pc}
 488              	.L51:
 489 000a 00BF     		.align	2
 490              	.L50:
 491 000c 00000000 		.word	htim5
 492              		.cfi_endproc
 493              	.LFE89:
ARM GAS  /var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s 			page 15


 495              		.section	.text.DMA2_Channel1_IRQHandler,"ax",%progbits
 496              		.align	1
 497              		.global	DMA2_Channel1_IRQHandler
 498              		.syntax unified
 499              		.thumb
 500              		.thumb_func
 502              	DMA2_Channel1_IRQHandler:
 503              	.LFB90:
 336:Core/Src/stm32f1xx_it.c **** 
 337:Core/Src/stm32f1xx_it.c **** /**
 338:Core/Src/stm32f1xx_it.c ****   * @brief This function handles DMA2 channel1 global interrupt.
 339:Core/Src/stm32f1xx_it.c ****   */
 340:Core/Src/stm32f1xx_it.c **** void DMA2_Channel1_IRQHandler(void)
 341:Core/Src/stm32f1xx_it.c **** {
 504              		.loc 1 341 1 is_stmt 1 view -0
 505              		.cfi_startproc
 506              		@ args = 0, pretend = 0, frame = 0
 507              		@ frame_needed = 0, uses_anonymous_args = 0
 508 0000 08B5     		push	{r3, lr}
 509              	.LCFI10:
 510              		.cfi_def_cfa_offset 8
 511              		.cfi_offset 3, -8
 512              		.cfi_offset 14, -4
 342:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA2_Channel1_IRQn 0 */
 343:Core/Src/stm32f1xx_it.c **** 
 344:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA2_Channel1_IRQn 0 */
 345:Core/Src/stm32f1xx_it.c ****   HAL_DMA_IRQHandler(&hdma_tim5_ch4_trig);
 513              		.loc 1 345 3 view .LVU57
 514 0002 0248     		ldr	r0, .L54
 515 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 516              	.LVL10:
 346:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA2_Channel1_IRQn 1 */
 347:Core/Src/stm32f1xx_it.c **** 
 348:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA2_Channel1_IRQn 1 */
 349:Core/Src/stm32f1xx_it.c **** }
 517              		.loc 1 349 1 is_stmt 0 view .LVU58
 518 0008 08BD     		pop	{r3, pc}
 519              	.L55:
 520 000a 00BF     		.align	2
 521              	.L54:
 522 000c 00000000 		.word	hdma_tim5_ch4_trig
 523              		.cfi_endproc
 524              	.LFE90:
 526              		.section	.text.DMA2_Channel2_IRQHandler,"ax",%progbits
 527              		.align	1
 528              		.global	DMA2_Channel2_IRQHandler
 529              		.syntax unified
 530              		.thumb
 531              		.thumb_func
 533              	DMA2_Channel2_IRQHandler:
 534              	.LFB91:
 350:Core/Src/stm32f1xx_it.c **** 
 351:Core/Src/stm32f1xx_it.c **** /**
 352:Core/Src/stm32f1xx_it.c ****   * @brief This function handles DMA2 channel2 global interrupt.
 353:Core/Src/stm32f1xx_it.c ****   */
 354:Core/Src/stm32f1xx_it.c **** void DMA2_Channel2_IRQHandler(void)
 355:Core/Src/stm32f1xx_it.c **** {
ARM GAS  /var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s 			page 16


 535              		.loc 1 355 1 is_stmt 1 view -0
 536              		.cfi_startproc
 537              		@ args = 0, pretend = 0, frame = 0
 538              		@ frame_needed = 0, uses_anonymous_args = 0
 539 0000 08B5     		push	{r3, lr}
 540              	.LCFI11:
 541              		.cfi_def_cfa_offset 8
 542              		.cfi_offset 3, -8
 543              		.cfi_offset 14, -4
 356:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA2_Channel2_IRQn 0 */
 357:Core/Src/stm32f1xx_it.c **** 
 358:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA2_Channel2_IRQn 0 */
 359:Core/Src/stm32f1xx_it.c ****   HAL_DMA_IRQHandler(&hdma_tim5_ch3_up);
 544              		.loc 1 359 3 view .LVU60
 545 0002 0248     		ldr	r0, .L58
 546 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 547              	.LVL11:
 360:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA2_Channel2_IRQn 1 */
 361:Core/Src/stm32f1xx_it.c **** 
 362:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA2_Channel2_IRQn 1 */
 363:Core/Src/stm32f1xx_it.c **** }
 548              		.loc 1 363 1 is_stmt 0 view .LVU61
 549 0008 08BD     		pop	{r3, pc}
 550              	.L59:
 551 000a 00BF     		.align	2
 552              	.L58:
 553 000c 00000000 		.word	hdma_tim5_ch3_up
 554              		.cfi_endproc
 555              	.LFE91:
 557              		.section	.text.DMA2_Channel3_IRQHandler,"ax",%progbits
 558              		.align	1
 559              		.global	DMA2_Channel3_IRQHandler
 560              		.syntax unified
 561              		.thumb
 562              		.thumb_func
 564              	DMA2_Channel3_IRQHandler:
 565              	.LFB92:
 364:Core/Src/stm32f1xx_it.c **** 
 365:Core/Src/stm32f1xx_it.c **** /**
 366:Core/Src/stm32f1xx_it.c ****   * @brief This function handles DMA2 channel3 global interrupt.
 367:Core/Src/stm32f1xx_it.c ****   */
 368:Core/Src/stm32f1xx_it.c **** void DMA2_Channel3_IRQHandler(void)
 369:Core/Src/stm32f1xx_it.c **** {
 566              		.loc 1 369 1 is_stmt 1 view -0
 567              		.cfi_startproc
 568              		@ args = 0, pretend = 0, frame = 0
 569              		@ frame_needed = 0, uses_anonymous_args = 0
 570 0000 08B5     		push	{r3, lr}
 571              	.LCFI12:
 572              		.cfi_def_cfa_offset 8
 573              		.cfi_offset 3, -8
 574              		.cfi_offset 14, -4
 370:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA2_Channel3_IRQn 0 */
 371:Core/Src/stm32f1xx_it.c **** 
 372:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA2_Channel3_IRQn 0 */
 373:Core/Src/stm32f1xx_it.c ****   HAL_DMA_IRQHandler(&hdma_tim8_ch1);
 575              		.loc 1 373 3 view .LVU63
ARM GAS  /var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s 			page 17


 576 0002 0248     		ldr	r0, .L62
 577 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 578              	.LVL12:
 374:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA2_Channel3_IRQn 1 */
 375:Core/Src/stm32f1xx_it.c **** 
 376:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA2_Channel3_IRQn 1 */
 377:Core/Src/stm32f1xx_it.c **** }
 579              		.loc 1 377 1 is_stmt 0 view .LVU64
 580 0008 08BD     		pop	{r3, pc}
 581              	.L63:
 582 000a 00BF     		.align	2
 583              	.L62:
 584 000c 00000000 		.word	hdma_tim8_ch1
 585              		.cfi_endproc
 586              	.LFE92:
 588              		.section	.text.DMA2_Channel4_5_IRQHandler,"ax",%progbits
 589              		.align	1
 590              		.global	DMA2_Channel4_5_IRQHandler
 591              		.syntax unified
 592              		.thumb
 593              		.thumb_func
 595              	DMA2_Channel4_5_IRQHandler:
 596              	.LFB93:
 378:Core/Src/stm32f1xx_it.c **** 
 379:Core/Src/stm32f1xx_it.c **** /**
 380:Core/Src/stm32f1xx_it.c ****   * @brief This function handles DMA2 channel4 and channel5 global interrupts.
 381:Core/Src/stm32f1xx_it.c ****   */
 382:Core/Src/stm32f1xx_it.c **** void DMA2_Channel4_5_IRQHandler(void)
 383:Core/Src/stm32f1xx_it.c **** {
 597              		.loc 1 383 1 is_stmt 1 view -0
 598              		.cfi_startproc
 599              		@ args = 0, pretend = 0, frame = 0
 600              		@ frame_needed = 0, uses_anonymous_args = 0
 601 0000 08B5     		push	{r3, lr}
 602              	.LCFI13:
 603              		.cfi_def_cfa_offset 8
 604              		.cfi_offset 3, -8
 605              		.cfi_offset 14, -4
 384:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA2_Channel4_5_IRQn 0 */
 385:Core/Src/stm32f1xx_it.c **** 
 386:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA2_Channel4_5_IRQn 0 */
 387:Core/Src/stm32f1xx_it.c ****   HAL_DMA_IRQHandler(&hdma_tim5_ch2);
 606              		.loc 1 387 3 view .LVU66
 607 0002 0348     		ldr	r0, .L66
 608 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 609              	.LVL13:
 388:Core/Src/stm32f1xx_it.c ****   HAL_DMA_IRQHandler(&hdma_tim5_ch1);
 610              		.loc 1 388 3 view .LVU67
 611 0008 0248     		ldr	r0, .L66+4
 612 000a FFF7FEFF 		bl	HAL_DMA_IRQHandler
 613              	.LVL14:
 389:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA2_Channel4_5_IRQn 1 */
 390:Core/Src/stm32f1xx_it.c **** 
 391:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA2_Channel4_5_IRQn 1 */
 392:Core/Src/stm32f1xx_it.c **** }
 614              		.loc 1 392 1 is_stmt 0 view .LVU68
 615 000e 08BD     		pop	{r3, pc}
ARM GAS  /var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s 			page 18


 616              	.L67:
 617              		.align	2
 618              	.L66:
 619 0010 00000000 		.word	hdma_tim5_ch2
 620 0014 00000000 		.word	hdma_tim5_ch1
 621              		.cfi_endproc
 622              	.LFE93:
 624              		.text
 625              	.Letext0:
 626              		.file 2 "/Applications/ArmGNUToolchain/14.3.rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 627              		.file 3 "/Applications/ArmGNUToolchain/14.3.rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 628              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xg.h"
 629              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 630              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 631              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 632              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  /var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s 			page 19


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f1xx_it.c
/var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s:19     .text.NMI_Handler:00000000 $t
/var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s:25     .text.NMI_Handler:00000000 NMI_Handler
/var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s:42     .text.HardFault_Handler:00000000 $t
/var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s:48     .text.HardFault_Handler:00000000 HardFault_Handler
/var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s:65     .text.MemManage_Handler:00000000 $t
/var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s:71     .text.MemManage_Handler:00000000 MemManage_Handler
/var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s:88     .text.BusFault_Handler:00000000 $t
/var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s:94     .text.BusFault_Handler:00000000 BusFault_Handler
/var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s:111    .text.UsageFault_Handler:00000000 $t
/var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s:117    .text.UsageFault_Handler:00000000 UsageFault_Handler
/var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s:134    .text.SVC_Handler:00000000 $t
/var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s:140    .text.SVC_Handler:00000000 SVC_Handler
/var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s:153    .text.DebugMon_Handler:00000000 $t
/var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s:159    .text.DebugMon_Handler:00000000 DebugMon_Handler
/var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s:172    .text.PendSV_Handler:00000000 $t
/var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s:178    .text.PendSV_Handler:00000000 PendSV_Handler
/var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s:191    .text.SysTick_Handler:00000000 $t
/var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s:197    .text.SysTick_Handler:00000000 SysTick_Handler
/var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s:217    .text.DMA1_Channel2_IRQHandler:00000000 $t
/var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s:223    .text.DMA1_Channel2_IRQHandler:00000000 DMA1_Channel2_IRQHandler
/var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s:243    .text.DMA1_Channel2_IRQHandler:0000000c $d
/var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s:248    .text.DMA1_Channel3_IRQHandler:00000000 $t
/var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s:254    .text.DMA1_Channel3_IRQHandler:00000000 DMA1_Channel3_IRQHandler
/var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s:274    .text.DMA1_Channel3_IRQHandler:0000000c $d
/var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s:279    .text.DMA1_Channel6_IRQHandler:00000000 $t
/var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s:285    .text.DMA1_Channel6_IRQHandler:00000000 DMA1_Channel6_IRQHandler
/var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s:305    .text.DMA1_Channel6_IRQHandler:0000000c $d
/var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s:310    .text.TIM3_IRQHandler:00000000 $t
/var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s:316    .text.TIM3_IRQHandler:00000000 TIM3_IRQHandler
/var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s:336    .text.TIM3_IRQHandler:0000000c $d
/var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s:341    .text.TIM8_BRK_TIM12_IRQHandler:00000000 $t
/var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s:347    .text.TIM8_BRK_TIM12_IRQHandler:00000000 TIM8_BRK_TIM12_IRQHandler
/var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s:367    .text.TIM8_BRK_TIM12_IRQHandler:0000000c $d
/var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s:372    .text.TIM8_UP_TIM13_IRQHandler:00000000 $t
/var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s:378    .text.TIM8_UP_TIM13_IRQHandler:00000000 TIM8_UP_TIM13_IRQHandler
/var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s:398    .text.TIM8_UP_TIM13_IRQHandler:0000000c $d
/var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s:403    .text.TIM8_TRG_COM_TIM14_IRQHandler:00000000 $t
/var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s:409    .text.TIM8_TRG_COM_TIM14_IRQHandler:00000000 TIM8_TRG_COM_TIM14_IRQHandler
/var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s:429    .text.TIM8_TRG_COM_TIM14_IRQHandler:0000000c $d
/var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s:434    .text.TIM8_CC_IRQHandler:00000000 $t
/var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s:440    .text.TIM8_CC_IRQHandler:00000000 TIM8_CC_IRQHandler
/var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s:460    .text.TIM8_CC_IRQHandler:0000000c $d
/var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s:465    .text.TIM5_IRQHandler:00000000 $t
/var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s:471    .text.TIM5_IRQHandler:00000000 TIM5_IRQHandler
/var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s:491    .text.TIM5_IRQHandler:0000000c $d
/var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s:496    .text.DMA2_Channel1_IRQHandler:00000000 $t
/var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s:502    .text.DMA2_Channel1_IRQHandler:00000000 DMA2_Channel1_IRQHandler
/var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s:522    .text.DMA2_Channel1_IRQHandler:0000000c $d
/var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s:527    .text.DMA2_Channel2_IRQHandler:00000000 $t
/var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s:533    .text.DMA2_Channel2_IRQHandler:00000000 DMA2_Channel2_IRQHandler
/var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s:553    .text.DMA2_Channel2_IRQHandler:0000000c $d
/var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s:558    .text.DMA2_Channel3_IRQHandler:00000000 $t
/var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s:564    .text.DMA2_Channel3_IRQHandler:00000000 DMA2_Channel3_IRQHandler
/var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s:584    .text.DMA2_Channel3_IRQHandler:0000000c $d
/var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s:589    .text.DMA2_Channel4_5_IRQHandler:00000000 $t
ARM GAS  /var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s 			page 20


/var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s:595    .text.DMA2_Channel4_5_IRQHandler:00000000 DMA2_Channel4_5_IRQHandler
/var/folders/t7/6h7kh3t5047c08d4xz5rz70m0000gn/T//ccyy5XzU.s:619    .text.DMA2_Channel4_5_IRQHandler:00000010 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_DMA_IRQHandler
hdma_tim3_ch3
hdma_tim3_ch4_up
hdma_tim3_ch1_trig
HAL_TIM_IRQHandler
htim3
htim8
htim5
hdma_tim5_ch4_trig
hdma_tim5_ch3_up
hdma_tim8_ch1
hdma_tim5_ch2
hdma_tim5_ch1
